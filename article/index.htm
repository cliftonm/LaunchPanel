<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Launch Panel</title>
</head>

<body>

<p>Launch Panel</p>
<h2>Introduction</h2>
<p>Especially at work, I find myself constantly opening the same folders and 
repositioning them to fit nicely on the screen, particularly when having to copy 
stuff between network drives.&nbsp; Besides that, there are a dozen Visual 
Studio solutions and numerous web pages (time card, SDLC, internal server pages, 
help desk, etc.) that I'm in and out of multiple times a week.&nbsp; And of 
course, SQL Server, Notepad++, and so forth.</p>
<p>Sure, a product like <a href="https://www.stardock.com/products/fences/">
Fences</a> is great for organizing my desktop icons, and I use it primarily at 
home.&nbsp; But still, even at home, where I have three monitors, I don't want 
windows to tell me where it thinks File Explorer should open, only to get it 
wrong, only to waste my time moving the window to the monitor and region I want 
the window in.&nbsp; I just want the window to show up where it's supposed to 
show up.&nbsp; All.&nbsp; The.&nbsp; Time.&nbsp; How hard is that, Microsoft?</p>
<p>Same with apps -- not every app needs to run full screen.&nbsp; Maybe I want 
three instances of Visual Studio, one on each monitor.&nbsp; Maybe I want to 
split two different projects vertically on the same monitor.&nbsp; The point 
being, I want as simple a process of launching an app and telling the app where 
it should live on my monitor.</p>
<p>So I created Launch Panel, which is really quite simplistic but took a lot of 
digging to get it to do what I wanted.&nbsp; Turns out moving an application has 
one set of complexities, moving the File Explorer window has yet another!&nbsp; 
Opening a tab in the default browser turned out to be the simplest thing to do.&nbsp;
</p>

</body>

</html>
